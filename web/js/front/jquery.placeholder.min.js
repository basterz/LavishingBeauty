/*!
 * HTML5 placeholder1 jQuery Plugin v1.8.2
 * @link http://github.com/mathiasbynens/placeholder1-jQuery-Plugin
 * @author Mathias Bynens <http://mathiasbynens.be/>
 */
;(function($) {

	var isInputSupported = 'placeholder1' in document.createElement('input'),
	    isTextareaSupported = 'placeholder1' in document.createElement('textarea');
	if (isInputSupported && isTextareaSupported) {
		$.fn.placeholder1 = function() {
			return this;
		};
		$.fn.placeholder1.input = $.fn.placeholder1.textarea = true;
	} else {
		$.fn.placeholder1 = function() {
			return this.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder1]')
				.bind('focus.placeholder1', clearplaceholder1)
				.bind('blur.placeholder1', setplaceholder1)
			.trigger('blur.placeholder1').end();
		};
		$.fn.placeholder1.input = isInputSupported;
		$.fn.placeholder1.textarea = isTextareaSupported;
	}

	function args(elem) {
		// Return an object of element attributes
		var newAttrs = {},
		    rinlinejQuery = /^jQuery\d+$/;
		$.each(elem.attributes, function(i, attr) {
			if (attr.specified && !rinlinejQuery.test(attr.name)) {
				newAttrs[attr.name] = attr.value;
			}
		});
		return newAttrs;
	}

	function clearplaceholder1() {
		var $input = $(this);
		if ($input.val() === $input.attr('placeholder1') && $input.hasClass('placeholder1')) {
			if ($input.data('placeholder1-password')) {
				$input.hide().next().attr('id', $input.removeAttr('id').data('placeholder1-id')).show().focus();
			} else {
				$input.val('').removeClass('placeholder1');
			}
		}
	}

	function setplaceholder1(elem) {
		var $replacement,
		    $input = $(this),
		    $origInput = $input,
		    id = this.id;
		if ($input.val() === '') {
			if ($input.is(':password')) {
				if (!$input.data('placeholder1-textinput')) {
					try {
						$replacement = $input.clone().attr({ type: 'text' });
					} catch(e) {
						$replacement = $('<input>').attr($.extend(args(this), { type: 'text' }));
					}
					$replacement
						.removeAttr('name')
						// We could just use the `.data(obj)` syntax here, but that wouldn’t work in pre-1.4.3 jQueries
						.data('placeholder1-password', true)
						.data('placeholder1-id', id)
						.bind('focus.placeholder1', clearplaceholder1);
					$input
						.data('placeholder1-textinput', $replacement)
						.data('placeholder1-id', id)
						.before($replacement);
				}
				$input = $input.removeAttr('id').hide().prev().attr('id', id).show();
			}
			$input.addClass('placeholder1').val($input.attr('placeholder1'));
		} else {
			$input.removeClass('placeholder1');
		}
	}

	$(function() {
		// Look for forms
		$('form').bind('submit.placeholder1', function() {
			// Clear the placeholder1 values so they don’t get submitted
			var $inputs = $('.placeholder1', this).each(clearplaceholder1);
			setTimeout(function() {
				$inputs.each(setplaceholder1);
			}, 10);
		});
	});

	// Clear placeholder1 values upon page reload
	$(window).bind('unload.placeholder1', function() {
		$('.placeholder1').val('');
	});

}(jQuery));