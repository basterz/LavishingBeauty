<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parrent_id
 * @property string $title
 * @property string $body
 * @property string $big_body
 * @property boolean $is_published
 * @property string $icon
 * @property integer $position
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $LinkingProductCategory
 * @property Doctrine_Collection $Slider_image
 * @property Doctrine_Collection $LinkingSliderCategory
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method integer             getParrentId()              Returns the current record's "parrent_id" value
 * @method string              getTitle()                  Returns the current record's "title" value
 * @method string              getBody()                   Returns the current record's "body" value
 * @method string              getBigBody()                Returns the current record's "big_body" value
 * @method boolean             getIsPublished()            Returns the current record's "is_published" value
 * @method string              getIcon()                   Returns the current record's "icon" value
 * @method integer             getPosition()               Returns the current record's "position" value
 * @method Doctrine_Collection getProduct()                Returns the current record's "Product" collection
 * @method Doctrine_Collection getLinkingProductCategory() Returns the current record's "LinkingProductCategory" collection
 * @method Doctrine_Collection getSliderImage()            Returns the current record's "Slider_image" collection
 * @method Doctrine_Collection getLinkingSliderCategory()  Returns the current record's "LinkingSliderCategory" collection
 * @method Category            setId()                     Sets the current record's "id" value
 * @method Category            setParrentId()              Sets the current record's "parrent_id" value
 * @method Category            setTitle()                  Sets the current record's "title" value
 * @method Category            setBody()                   Sets the current record's "body" value
 * @method Category            setBigBody()                Sets the current record's "big_body" value
 * @method Category            setIsPublished()            Sets the current record's "is_published" value
 * @method Category            setIcon()                   Sets the current record's "icon" value
 * @method Category            setPosition()               Sets the current record's "position" value
 * @method Category            setProduct()                Sets the current record's "Product" collection
 * @method Category            setLinkingProductCategory() Sets the current record's "LinkingProductCategory" collection
 * @method Category            setSliderImage()            Sets the current record's "Slider_image" collection
 * @method Category            setLinkingSliderCategory()  Sets the current record's "LinkingSliderCategory" collection
 * 
 * @package    LavishingBeaty
 * @subpackage model
 * @author     Tsvetan Himchev
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('parrent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('big_body', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('icon', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Product', array(
             'refClass' => 'LinkingProductCategory',
             'local' => 'category_id',
             'foreign' => 'product_id'));

        $this->hasMany('LinkingProductCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Slider_image', array(
             'refClass' => 'LinkingSliderCategory',
             'local' => 'category_id',
             'foreign' => 'slider_image_id'));

        $this->hasMany('LinkingSliderCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'body',
              2 => 'big_body',
              3 => 'is_published',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}