<?php

/**
 * BaseLinkingSliderCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $slider_image_id
 * @property integer $category_id
 * @property Slider_image $Slider_images
 * @property Category $Categories
 * 
 * @method integer               getSliderImageId()   Returns the current record's "slider_image_id" value
 * @method integer               getCategoryId()      Returns the current record's "category_id" value
 * @method Slider_image          getSliderImages()    Returns the current record's "Slider_images" value
 * @method Category              getCategories()      Returns the current record's "Categories" value
 * @method LinkingSliderCategory setSliderImageId()   Sets the current record's "slider_image_id" value
 * @method LinkingSliderCategory setCategoryId()      Sets the current record's "category_id" value
 * @method LinkingSliderCategory setSliderImages()    Sets the current record's "Slider_images" value
 * @method LinkingSliderCategory setCategories()      Sets the current record's "Categories" value
 * 
 * @package    LavishingBeaty
 * @subpackage model
 * @author     Tsvetan Himchev
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLinkingSliderCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('linking_slider_category');
        $this->hasColumn('slider_image_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Slider_image as Slider_images', array(
             'local' => 'slider_image_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Category as Categories', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}