<?php

/**
 * BaseUserSession
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property string $ip
 * @property string $browser_info
 * 
 * @method integer     getId()           Returns the current record's "id" value
 * @method integer     getUserId()       Returns the current record's "user_id" value
 * @method string      getName()         Returns the current record's "name" value
 * @method string      getIp()           Returns the current record's "ip" value
 * @method string      getBrowserInfo()  Returns the current record's "browser_info" value
 * @method UserSession setId()           Sets the current record's "id" value
 * @method UserSession setUserId()       Sets the current record's "user_id" value
 * @method UserSession setName()         Sets the current record's "name" value
 * @method UserSession setIp()           Sets the current record's "ip" value
 * @method UserSession setBrowserInfo()  Sets the current record's "browser_info" value
 * 
 * @package    LavishingBeaty
 * @subpackage model
 * @author     Tsvetan Himchev
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserSession extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_session');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('browser_info', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('type', 'MyISAM');
        $this->option('symfony', array(
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}